---
- name: PostgreSQL Primary-Replica Architecture
  hosts: all
  become: true

  vars_files:
    - /workspaces/automation_with_flask/ansible/my_vault.yaml

  tasks:
    - name: Install PostgreSQL
      apt:
        name: postgresql
        state: present

    - name: Ensure PostgreSQL service is running
      service:
        name: postgresql
        state: started
        enabled: true

    - name: Configure PostgreSQL for replication on the primary
      when: inventory_hostname in groups['primary']
      block:
        - name: Update pg_hba.conf for replication
          lineinfile:
            path: /etc/postgresql/{{ postgres_version }}/main/pg_hba.conf
            line: "host    replication     all             {{ item }}         md5"
            state: present
          loop: "{{ groups['replica'] }}"
        
        - name: Update postgresql.conf for replication
          lineinfile:
            path: /etc/postgresql/{{ postgres_version }}/main/postgresql.conf
            regexp: '^#?wal_level ='
            line: "wal_level = replica"
        
        - name: Restart PostgreSQL to apply replication settings
          service:
            name: postgresql
            state: restarted

    - name: Setup replica
      when: inventory_hostname in groups['replica']
      block:
        - name: Install PostgreSQL client
          apt:
            name: postgresql-client
            state: present

        - name: Ensure PostgreSQL is stopped on replica before base backup
          service:
            name: postgresql
            state: stopped
    
        - name: Ensure replication is set up
          shell: |
            pg_basebackup -h {{ groups['primary'][0] }} -D /var/lib/postgresql/{{ postgres_version }}/main -U postgres -v -P --wal-method=stream
            echo "standby_mode = 'on'" >> /etc/postgresql/{{ postgres_version }}/main/recovery.conf
            echo "primary_conninfo = 'host={{ groups['primary'][0] }} user={{ replication_user }} password={{ db_password }}" >> /etc/postgresql/{{ postgres_version }}/main/recovery.conf
          args:
            creates: /var/lib/postgresql/{{ postgres_version }}/main/recovery.conf

        - name: Start PostgreSQL on the replica
          service:
            name: postgresql
            state: started
            enabled: true
